package com.kuang._07线程同步_同步方法;


/**
 * 线程同步解决线程安全问题的核心思想
 *     让多个线程实现先后依次访问共享资源，这样就解决了安全问题
 *
 * 线程同步的做法：加锁
 *     是把共享资源进行上锁，每次只能一个线程进入访问完毕后，其他线程才能进来
 *
 * 线程同步的方式有三种：
 *    1. 同步代码块
 *    2. 同步方法
 *    3. lock显示锁
 *
 * B.同步方法
 *      作用：把出现线程安全问题的核心方法给上锁，每次只能一个线程进入，执行完毕以后自动解锁，其他线程才能进来执行
 *      用法：直接给方法加上一个修饰符 synchronized
 *      原理： 同步方法的原理和同步代码块的底层原理其实是完全一样的，只是同步方法是把整个方法的代码都锁起来。
 *            同步方法是整个方法的代码都锁起来
 *            同步方法其实底层也是有锁对象的：
 *               -- 如果方法是实例方法：同步方法默认用this作为锁对象
 *               --  如果方法是静态方法：同步方法默认用类名.class作为锁对象
 */
public class ThreadSafe {
    public static void main(String[] args) {
        Account acc = new Account("ICBC-1999", 1000000.00);
        DrawThread t1 = new DrawThread(acc, "小明");
        t1.start();


        DrawThread t2 = new DrawThread(acc, "小红");
        t2.start();


    }
}
